name: Release
on:
  workflow_dispatch:
    inputs: 
      version:
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Configure Git
        run: git config --global core.autocrlf false
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Check if on dev
        run: |
          if [[ $(git branch --show-current) != "dev" ]]; then
            echo "This is not a development branch. Cancelling workflow..."
            exit 1
          fi
      - name: Update the README link
        run: sed -i -E 's/v[0-9]+\.[0-9]+/${{ github.event.inputs.version }}/g' README.md
      - name: Update deprecated input json files
        run: |
          jq --arg newVersion "${{ github.event.inputs.version }}" '.batVersion = $newVersion' "input.json" > ram1.json
          mv ram1.json input.json
          jq --arg newVersion "${{ github.event.inputs.version }}" '.batVersion = $newVersion' "input2.json" > ram2.json
          mv ram2.json input2.json
      - name: Commit readme and deprecated json
        uses: EndBug/add-and-commit@v9
        with:
          add: "['README.md', 'input.json', 'input2.json']" 
          message: 'chore: Release ${{ github.event.inputs.version }}'
          tag: ${{ github.event.inputs.version }} 
          push: true
      - name: Sync dev to main
        run: git push origin dev:main --force
      - name: Append release version to filename
        run: cp auto-cli.bat auto-cli-${{ github.event.inputs.version }}.bat
      - name: Publish the release
        run: |
          gh release create "${{ github.event.inputs.version }}" \
          --title "${{ github.event.inputs.version }}" \
          --generate-notes \
          auto-cli-${{ github.event.inputs.version }}.bat
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}